{"version":3,"file":"FormField.e4f52c7a.js","sources":["../../src/ui-toolkit/components/forms/FormField.tsx"],"sourcesContent":["import React from \"react\";\nimport { FieldError } from \"react-hook-form\";\nimport { getClassName } from \"../../utils\";\n\nexport const FormField = ({\n  name,\n  label,\n  validationStatus,\n  className,\n  error,\n  required,\n  children,\n  hint,\n  ...rest\n}: FormFieldProps) => {\n  const errorMsg = parseErrorMessage(error, label);\n  const cssClass = getClassName([\"form-field\", \"has-validation\", className]);\n  const status = getValidationStatus(validationStatus, errorMsg);\n  return (\n    <div className={cssClass} {...rest}>\n      {label && (\n        <div className=\"d-flex\">\n          <label className=\"form-label\" htmlFor={name} style={{ position: \"relative\" }}>\n            {label}\n            {required && <span className=\"text-danger required\">*</span>}\n          </label>\n        </div>\n      )}\n      <span className={getValidationClass(status)}>{children}</span>\n      {errorMsg && status === \"invalid\" && <div className=\"invalid-feedback\">{errorMsg}</div>}\n      {status !== \"invalid\" && hint && (\n        <div\n          className={getClassName([\n            \"form-field-hint\",\n            status === \"valid\" ? \"text-success\" : \"text-muted\",\n          ])}\n        >\n          {hint}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport interface FormFieldProps {\n  /** The input name */\n  name: string;\n  /** The field label */\n  label?: string;\n  /** Helper text */\n  hint?: string;\n  /** The React Hook Form error */\n  error?: FieldError | string;\n  /** JSX that contains an input element with a matching name. */\n  children?: React.ReactNode;\n  /** Optionally pass an explicit validation status */\n  validationStatus?: ValidationStatus;\n  /** Show the little red asterisk? */\n  required?: boolean;\n  /** Additional CSS classes to add */\n  className?: string;\n  [key: string]: any;\n}\n\nexport const pluckFormFieldProps = (props: any) => {\n  const { name, label, validationStatus, error, required, hint, className, ...formControlProps } =\n    props;\n\n  return {\n    formFieldProps: {\n      name,\n      label,\n      validationStatus,\n      error,\n      required,\n      hint,\n      className,\n    },\n\n    formControlProps: {\n      name,\n      id: name,\n      ...formControlProps,\n    },\n  };\n};\n\nexport const getValidationStatus = (\n  validationStatus: ValidationStatus,\n  error: FieldError | string\n) => {\n  let status = validationStatus;\n  if (!status && error) {\n    status = \"invalid\";\n  }\n\n  return status;\n};\n\nconst VALIDATION_CSS_CLASSES = {\n  valid: \"is-valid\",\n  invalid: \"is-invalid\",\n};\n\nexport const getValidationClass = (status: ValidationStatus) => {\n  if (!status) return \"\";\n  return VALIDATION_CSS_CLASSES[status] || \"\";\n};\n\nexport const parseErrorMessage = (error: FieldError | string, label) => {\n  if (!error) return \"\";\n  if (typeof error === \"string\") return error;\n\n  if (error.message) return error.message;\n\n  if (error.type === \"required\") return `${label || \"Field\"} is required`;\n  return `${label || \"Field\"} error: ${error.type}`;\n};\n"],"names":["rest","name","label","validationStatus","className","error","required","children","hint","_jsxs","cssClass","_jsx","errorMsg","formControlProps","status"],"mappings":"4qBAIO,KAAA,GAAA,AAAA,GASFA,CATE,QAAmB,QACxBC,QACAC,mBACAC,YACAC,QACAC,WACAC,WACAC,QAPK,EAQLC,IARK,EAQLA,CARwB,OACxBP,QACAC,mBACAC,YACAC,QACAC,WACAC,WACAC,SAIA,KAAA,GAAA,EAAA,EAAA,CAAA,EACA,EAAA,EAAA,CAAA,aAAA,iBAAA,CAAA,CAAA,EACA,EAAA,EAAA,EAAA,CAAA,EACA,MAAAE,GAAA,MAAA,KACE,UAAA,GAAgBC,GADlB,CACgCV,SAAAA,CAAAA,GAAAA,EAAAA,MAAAA,CAE1B,UAAA,SAAe,SAAAS,EAAA,QAAA,CACb,UAAA,aAAiB,QAAA,EAAsBR,MAAAA,CAAa,SAAA,UAAY,EAAZ,SAAA,CAAA,EAAA,GAAAU,EAAA,OAAA,CAErC,UAAA,uBAAgB,SAAA,GAAhB,CAAA,CAAA,CAFf,CAAA,CAAA,CAAA,EAAAA,EAAA,OAAA,CAMJ,UAAA,EAAA,CAAA,EAAmC,UAAnC,CAAA,EAAA,GAAA,IAAA,WAAAA,EAAA,MAAA,CACqC,UAAA,mBAAe,SAAA,CAAoBC,CAAAA,EAAAA,IAAAA,WAAAA,GAAAA,EAAAA,MAAAA,CAEtE,UAAA,EAAA,CAAA,kBAAA,IAAA,QAAA,eAAA,YAAA,CAAA,EACyB,SAAA,CAKtBJ,CAAAA,CAAAA,CAlBP,EAAA,CAuBH,EAsBM,EAAA,AAAA,GAAA,CACL,KAA4EK,KAAtE,QAAEZ,QAAMC,mBAAOC,QAAkBE,WAAOC,OAAUE,aAAoBK,EAAdT,IAAcS,EAAdT,CAAxD,OAAEH,QAAMC,mBAAOC,QAAkBE,WAAOC,OAAUE,cAGxD,MAAA,CAAO,eAAA,CACW,OACdP,QACAC,mBACAC,QACAE,WACAC,OACAE,WACAJ,EAPc,iBAAA,GAUE,OAChBH,GAAAA,GACIA,EAFY,CAMrB,EAEM,EAAA,CAAA,EAAA,IAAA,CAIL,GAAA,GAAA,EACA,MAAA,CAAA,GAAA,GACEa,GAAAA,WAGF,CACD,EAED,EAAA,CAA+B,MAAA,WACtB,QAAA,YADsB,EAKxB,EAAA,AAAA,GACL,GACA,EAAA,IAAA,GAGK,EAAA,CAAA,EAAA,IACL,EACA,MAAA,IAAA,SAA+B,EAE/B,EAAA,QAAmB,EAAA,QAEnB,EAAA,OAAA,WAA+B,GAAA,GAAA,sBAC/B,GAAA,GAAA,kBAAA,EAAA,OANY"}