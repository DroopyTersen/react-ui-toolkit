{"version":3,"file":"AsyncData.stories.3bd80666.js","sources":["../../src/ui-toolkit/components/AsyncData/AsyncData.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { useAsyncData } from \"../../hooks/useAsyncData\";\nimport { Loading } from \"../Loading/Loading\";\n\nexport const AsyncData = <T extends unknown>(props: AsyncDataProps<T>) => {\n  const { data, error, isLoading } = useAsyncData(props.asyncFn, props.params, null);\n  console.log(\"ðŸš€ | data\", data);\n\n  if (error) {\n    return (\n      <div>\n        <h3>Error!</h3>\n        <pre>{JSON.stringify(error, null, 3)}</pre>\n      </div>\n    );\n  }\n  if (isLoading) {\n    return props.loading || <Loading />;\n  }\n\n  if (data !== null) {\n    return props.children(data);\n  }\n\n  return null;\n};\n\ninterface AsyncDataProps<T> {\n  asyncFn: (...args) => Promise<T>;\n  params: any[];\n  children: (data: T) => JSX.Element;\n  loading?: JSX.Element;\n}\n"],"names":["data","error","isLoading","console","_jsxs","_jsx"],"mappings":"y2BAKO,KAAA,GAAA,AAAA,GAAA,CACL,KAAA,CAAM,OAAEA,QAAMC,aAAOC,EAAAA,EAAAA,QAAAA,EAAAA,OAAAA,IAAAA,EAGrB,MAFAC,SAAAA,IAAAA,mBAAAA,CAAAA,EAEA,EACEC,EAAA,MAAA,CACE,SAAA,CAAAC,EAAA,KAAA,CACE,SAAA,QAAA,CAAA,EAAAA,EAAA,MAAA,CACA,SAAA,KAAA,UAAA,EAAA,KAAA,CAAA,CAAM,CAAA,CAAA,CAFR,CAAA,EAMJ,EACE,EAAA,SAAAA,EAAA,EAAA,CAAA,CAAA,EAGF,IAAA,KACE,EAAA,SAAA,CAAA,EAGF,IACD;;;;;;;;;;;;;;;;;;;;"}