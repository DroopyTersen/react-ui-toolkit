var g=Object.defineProperty,y=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var d=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var m=(e,t,o)=>t in e?g(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,i=(e,t)=>{for(var o in t||(t={}))d.call(t,o)&&m(e,o,t[o]);if(p)for(var o of p(t))l.call(t,o)&&m(e,o,t[o]);return e},n=(e,t)=>y(e,h(t));var u=(e,t)=>{var o={};for(var s in e)d.call(e,s)&&t.indexOf(s)<0&&(o[s]=e[s]);if(e!=null&&p)for(var s of p(e))t.indexOf(s)<0&&l.call(e,s)&&(o[s]=e[s]);return o};import"./index.be79fcbf.js";import{c as r,A as k,M as x}from"./Props.ae9119dc.js";import"./iframe.ad13290e.js";import"./jsx-runtime.b789c2e1.js";import{P as S,S as T}from"./index.7fa186ee.js";import"./string.bf3fd91c.js";const G={},M="wrapper";function c(o){var s=o,{components:e}=s,t=u(s,["components"]);return r(M,n(i(i({},G),t),{components:e,mdxType:"MDXLayout"}),r(x,{title:"Hooks/useGrid",mdxType:"Meta"}),r("h1",null,"useGrid"),r("p",null,"A hook to help you create and pass props to grid components. Helps to deal with things like paging the items."),r("pre",null,r("code",{parentName:"pre",className:"language-javascript"},`// You can grab the whole grid object
let grid = useGrid(items, { pageSize: 25 });
// Or you can destructure
let { showingItems, paging, stats } = useGrid(items, { pageSize: 25 });
`)),r("h3",null,"Import"),r("pre",null,r("code",{parentName:"pre",className:"language-tsx"},`import { useGrid } from "~ui-toolkit/hooks/useGrid";
`)),r("h2",null,"Params"),r(S,{properties:[{name:"items",type:"array",description:"The items to sort.",isRequired:"Required"},{name:"props",type:"object",description:"Takes optional pageSize property.",isRequired:"Optional"}],mdxType:"PropsTable"}),r(T,{path:"hooks/useGrid.ts",mdxType:"SourceCodeLink"},"View Source"))}c.isMDXComponent=!0;const _=()=>{throw new Error("Docs-only story")};_.parameters={docsOnly:!0};const a={title:"Hooks/useGrid",includeStories:["__page"]},w={};a.parameters=a.parameters||{};a.parameters.docs=n(i({},a.parameters.docs||{}),{page:()=>r(k,{mdxStoryNameToKey:w,mdxComponentAnnotations:a},r(c,null))});const L=["__page"];export{L as __namedExportsOrder,_ as __page,a as default};
//# sourceMappingURL=useGrid.stories.094063be.js.map
